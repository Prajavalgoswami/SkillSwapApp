@model IEnumerable<SkillSwapApp.Models.Message>
@{
    ViewData["Title"] = "Chat";
}

<h2>Chat with Partner</h2>

<!-- Chat Box -->
<div id="messagesList" class="border rounded p-3 mb-3 bg-light" style="height:400px; overflow-y:auto;">
    @foreach (var msg in Model)
    {
        <div class="mb-2">
            <strong class="@(msg.FromUserId == ViewBag.CurrentUserId ? "text-primary" : "text-success")">
                @(msg.FromUserId == ViewBag.CurrentUserId ? "You" : "Partner")
            </strong>: @msg.Content
            <small class="text-muted">(@msg.SentAt.ToLocalTime())</small>
        </div>
    }
</div>

<!-- Input -->
<div class="input-group">
    <input type="text" id="messageInput" class="form-control" placeholder="Type your message..." autocomplete="off" />
    <div class="input-group-append">
        <button id="sendButton" class="btn btn-primary">Send</button>
    </div>
</div>

@section Scripts {
    <!-- Use CDN for SignalR -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/6.0.0/signalr.min.js"></script>

    <script>
        // Pass user IDs from Razor into JS variables
        const currentUserId = '@ViewBag.CurrentUserId';
        const otherUserId = '@ViewBag.OtherUserId';

        // Create connection
        const connection = new signalR.HubConnectionBuilder()
            .withUrl("/chatHub")
            .build();

        // Scroll helper function
        function scrollToBottom() {
            const msgList = document.getElementById("messagesList");
            msgList.scrollTop = msgList.scrollHeight;
        }

        // Receive message handler
        connection.on("ReceiveMessage", function (fromUserId, message) {
            const msgDiv = document.createElement("div");
            msgDiv.classList.add("mb-2");
            msgDiv.innerHTML =
                `<strong class="${fromUserId === currentUserId ? "text-primary" : "text-success"}">
                    ${fromUserId === currentUserId ? "You" : "Partner"}
                </strong>: ${message}`;
            document.getElementById("messagesList").appendChild(msgDiv);

            scrollToBottom();
        });

        // Start connection
        connection.start().catch(err => console.error(err.toString()));

        // Send message function
        function sendMessage() {
            const messageInput = document.getElementById("messageInput");
            const message = messageInput.value.trim();
            if (message === "") return;

            connection.invoke("SendMessage", currentUserId, otherUserId, message)
                .catch(err => console.error(err.toString()));

            messageInput.value = "";
        }

        // Send on button click
        document.getElementById("sendButton").addEventListener("click", sendMessage);

        // Send on Enter key
        document.getElementById("messageInput").addEventListener("keypress", function (e) {
            if (e.key === "Enter") {
                sendMessage();
                e.preventDefault();
            }
        });

        // Auto scroll on page load
        scrollToBottom();
    </script>
}
